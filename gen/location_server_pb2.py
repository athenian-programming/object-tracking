# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: location_server.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor.FileDescriptor(
  name='location_server.proto',
  package='object_tracking',
  syntax='proto3',
    serialized_pb=_b(
        '\n\x15location_server.proto\x12\x0fobject_tracking\"\x1a\n\nClientInfo\x12\x0c\n\x04info\x18\x01 \x01(\t\"\x1a\n\nServerInfo\x12\x0c\n\x04info\x18\x01 \x01(\t\"Y\n\x0eObjectLocation\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\x12\r\n\x05width\x18\x03 \x01(\x05\x12\x0e\n\x06height\x18\x04 \x01(\x05\x12\x12\n\nmiddle_inc\x18\x05 \x01(\x05\"\x85\x01\n\x11\x46ocusLinePosition\x12\x10\n\x08in_focus\x18\x01 \x01(\x08\x12\x12\n\nmid_offset\x18\x02 \x01(\x05\x12\x0f\n\x07\x64\x65grees\x18\x03 \x01(\x05\x12\x16\n\x0emid_line_cross\x18\x04 \x01(\x05\x12\r\n\x05width\x18\x05 \x01(\x05\x12\x12\n\nmiddle_inc\x18\x06 \x01(\x05\"\x07\n\x05\x45mpty2\x90\x02\n\x0eLocationServer\x12L\n\x0eRegisterClient\x12\x1b.object_tracking.ClientInfo\x1a\x1b.object_tracking.ServerInfo\"\x00\x12T\n\x15ReportObjectLocations\x12\x1f.object_tracking.ObjectLocation\x1a\x16.object_tracking.Empty\"\x00(\x01\x12Z\n\x18ReportFocusLinePositions\x12\".object_tracking.FocusLinePosition\x1a\x16.object_tracking.Empty\"\x00(\x01\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_CLIENTINFO = _descriptor.Descriptor(
  name='ClientInfo',
  full_name='object_tracking.ClientInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='object_tracking.ClientInfo.info', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=42,
  serialized_end=68,
)


_SERVERINFO = _descriptor.Descriptor(
  name='ServerInfo',
  full_name='object_tracking.ServerInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='object_tracking.ServerInfo.info', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=96,
)

_OBJECTLOCATION = _descriptor.Descriptor(
    name='ObjectLocation',
    full_name='object_tracking.ObjectLocation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
        name='x', full_name='object_tracking.ObjectLocation.x', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
        name='y', full_name='object_tracking.ObjectLocation.y', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
        name='width', full_name='object_tracking.ObjectLocation.width', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
        name='height', full_name='object_tracking.ObjectLocation.height', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
        name='middle_inc', full_name='object_tracking.ObjectLocation.middle_inc', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=98,
    serialized_end=187,
)

_FOCUSLINEPOSITION = _descriptor.Descriptor(
    name='FocusLinePosition',
    full_name='object_tracking.FocusLinePosition',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='in_focus', full_name='object_tracking.FocusLinePosition.in_focus', index=0,
            number=1, type=8, cpp_type=7, label=1,
            has_default_value=False, default_value=False,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='mid_offset', full_name='object_tracking.FocusLinePosition.mid_offset', index=1,
            number=2, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='degrees', full_name='object_tracking.FocusLinePosition.degrees', index=2,
            number=3, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='mid_line_cross', full_name='object_tracking.FocusLinePosition.mid_line_cross', index=3,
            number=4, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='width', full_name='object_tracking.FocusLinePosition.width', index=4,
            number=5, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='middle_inc', full_name='object_tracking.FocusLinePosition.middle_inc', index=5,
            number=6, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=190,
    serialized_end=323,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='object_tracking.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
    serialized_start=325,
    serialized_end=332,
)

DESCRIPTOR.message_types_by_name['ClientInfo'] = _CLIENTINFO
DESCRIPTOR.message_types_by_name['ServerInfo'] = _SERVERINFO
DESCRIPTOR.message_types_by_name['ObjectLocation'] = _OBJECTLOCATION
DESCRIPTOR.message_types_by_name['FocusLinePosition'] = _FOCUSLINEPOSITION
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY

ClientInfo = _reflection.GeneratedProtocolMessageType('ClientInfo', (_message.Message,), dict(
    DESCRIPTOR=_CLIENTINFO,
    __module__='location_server_pb2'
  # @@protoc_insertion_point(class_scope:object_tracking.ClientInfo)
))
_sym_db.RegisterMessage(ClientInfo)

ServerInfo = _reflection.GeneratedProtocolMessageType('ServerInfo', (_message.Message,), dict(
    DESCRIPTOR=_SERVERINFO,
    __module__='location_server_pb2'
  # @@protoc_insertion_point(class_scope:object_tracking.ServerInfo)
))
_sym_db.RegisterMessage(ServerInfo)

ObjectLocation = _reflection.GeneratedProtocolMessageType('ObjectLocation', (_message.Message,), dict(
    DESCRIPTOR=_OBJECTLOCATION,
    __module__='location_server_pb2'
    # @@protoc_insertion_point(class_scope:object_tracking.ObjectLocation)
))
_sym_db.RegisterMessage(ObjectLocation)

FocusLinePosition = _reflection.GeneratedProtocolMessageType('FocusLinePosition', (_message.Message,), dict(
    DESCRIPTOR=_FOCUSLINEPOSITION,
    __module__='location_server_pb2'
    # @@protoc_insertion_point(class_scope:object_tracking.FocusLinePosition)
))
_sym_db.RegisterMessage(FocusLinePosition)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
    DESCRIPTOR=_EMPTY,
    __module__='location_server_pb2'
  # @@protoc_insertion_point(class_scope:object_tracking.Empty)
))
_sym_db.RegisterMessage(Empty)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class LocationServerStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.RegisterClient = channel.unary_unary(
          '/object_tracking.LocationServer/RegisterClient',
          request_serializer=ClientInfo.SerializeToString,
          response_deserializer=ServerInfo.FromString,
      )
      self.ReportObjectLocations = channel.stream_unary(
          '/object_tracking.LocationServer/ReportObjectLocations',
          request_serializer=ObjectLocation.SerializeToString,
          response_deserializer=Empty.FromString,
      )
      self.ReportFocusLinePositions = channel.stream_unary(
          '/object_tracking.LocationServer/ReportFocusLinePositions',
          request_serializer=FocusLinePosition.SerializeToString,
          response_deserializer=Empty.FromString,
      )


  class LocationServerServicer(object):

    def RegisterClient(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ReportObjectLocations(self, request_iterator, context):
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportFocusLinePositions(self, request_iterator, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LocationServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'RegisterClient': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterClient,
            request_deserializer=ClientInfo.FromString,
            response_serializer=ServerInfo.SerializeToString,
        ),
        'ReportObjectLocations': grpc.stream_unary_rpc_method_handler(
            servicer.ReportObjectLocations,
            request_deserializer=ObjectLocation.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'ReportFocusLinePositions': grpc.stream_unary_rpc_method_handler(
            servicer.ReportFocusLinePositions,
            request_deserializer=FocusLinePosition.FromString,
            response_serializer=Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'object_tracking.LocationServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaLocationServerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def RegisterClient(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

    def ReportObjectLocations(self, request_iterator, context):
        context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

    def ReportFocusLinePositions(self, request_iterator, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLocationServerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def RegisterClient(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    RegisterClient.future = None

    def ReportObjectLocations(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()

    ReportObjectLocations.future = None

    def ReportFocusLinePositions(self, request_iterator, timeout, metadata=None, with_call=False,
                                 protocol_options=None):
        raise NotImplementedError()

    ReportFocusLinePositions.future = None


  def beta_create_LocationServer_server(servicer, pool=None, pool_size=None, default_timeout=None,
                                        maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('object_tracking.LocationServer', 'RegisterClient'): ClientInfo.FromString,
        ('object_tracking.LocationServer', 'ReportFocusLinePositions'): FocusLinePosition.FromString,
        ('object_tracking.LocationServer', 'ReportObjectLocations'): ObjectLocation.FromString,
    }
    response_serializers = {
      ('object_tracking.LocationServer', 'RegisterClient'): ServerInfo.SerializeToString,
        ('object_tracking.LocationServer', 'ReportFocusLinePositions'): Empty.SerializeToString,
        ('object_tracking.LocationServer', 'ReportObjectLocations'): Empty.SerializeToString,
    }
    method_implementations = {
      ('object_tracking.LocationServer', 'RegisterClient'): face_utilities.unary_unary_inline(servicer.RegisterClient),
        ('object_tracking.LocationServer', 'ReportFocusLinePositions'): face_utilities.stream_unary_inline(
            servicer.ReportFocusLinePositions),
        ('object_tracking.LocationServer', 'ReportObjectLocations'): face_utilities.stream_unary_inline(
            servicer.ReportObjectLocations),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers,
                                                         response_serializers=response_serializers, thread_pool=pool,
                                                         thread_pool_size=pool_size, default_timeout=default_timeout,
                                                         maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LocationServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('object_tracking.LocationServer', 'RegisterClient'): ClientInfo.SerializeToString,
        ('object_tracking.LocationServer', 'ReportFocusLinePositions'): FocusLinePosition.SerializeToString,
        ('object_tracking.LocationServer', 'ReportObjectLocations'): ObjectLocation.SerializeToString,
    }
    response_deserializers = {
      ('object_tracking.LocationServer', 'RegisterClient'): ServerInfo.FromString,
        ('object_tracking.LocationServer', 'ReportFocusLinePositions'): Empty.FromString,
        ('object_tracking.LocationServer', 'ReportObjectLocations'): Empty.FromString,
    }
    cardinalities = {
      'RegisterClient': cardinality.Cardinality.UNARY_UNARY,
        'ReportFocusLinePositions': cardinality.Cardinality.STREAM_UNARY,
        'ReportObjectLocations': cardinality.Cardinality.STREAM_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer,
                                                     request_serializers=request_serializers,
                                                     response_deserializers=response_deserializers, thread_pool=pool,
                                                     thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'object_tracking.LocationServer', cardinalities,
                                             options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
